@model ColecticaSdkMvc.Models.EquivalenceModel
@{
    ViewBag.Title = "Variables";
    Layout = "~/Views/Shared/_Layout.cshtml";
    TempData.Keep("EquivalenceModel");
    <link href="@Url.Content("~/Content/Responsive-Card-Table.css")" rel="stylesheet" type="text/css" />
}

<style type="text/css">
    ul {
        list-style-type: none;
    }
</style>

<style>
    .tooltip {
        position: relative;
        display: inline-block;
        border-bottom: 1px dotted black;
    }

        .tooltip .tooltiptext {
            visibility: hidden;
            width: 120px;
            background-color: black;
            color: #fff;
            text-align: center;
            border-radius: 6px;
            padding: 5px 0;
            /* Position the tooltip */
            position: absolute;
            z-index: 1;
        }

        .tooltip:hover .tooltiptext {
            visibility: visible;
        }
</style>

<script>

    function outputCSVClicked(csvdata) {
       var url = '@Url.Action("VariablesCSV", "Equivalence")';
        $.post(url, csvdata, function (view) {
            JSONtoCSVConvertor(view, "Variables.csv", true);
        });
    }

    function JSONtoCSVConvertor(JSONData, ReportTitle, ShowLabel) {
        //If JSONData is not an object then JSON.parse will parse the JSON string in an Object
        var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;
        var CSV = '';

        //1st loop is to extract each row
        for (var i = 0; i < arrData.length; i++) {
            var row = "";
            //2nd loop will extract each column and convert it in string comma-seprated
            for (var index in arrData[i]) {
                row += arrData[i][index];
            }
            row.slice(0, row.length - 1);
            //add a line break after each row
            CSV += row;
        }
        if (CSV == '') {
            alert("Invalid data");
            return;
        }

        //this trick will generate a temp "a" tag
        var link = document.createElement("a");
        link.id = "lnkDwnldLnk";

        //this part will append the anchor tag and remove it after automatic click
        document.body.appendChild(link);

        var csv = CSV;
        blob = new Blob([csv], { type: 'text/csv' });
        var csvUrl = window.webkitURL.createObjectURL(blob);
        var filename = 'Variables.csv';
        $("#lnkDwnldLnk")
            .attr({
                'download': filename,
                'href': csvUrl
            });

        $('#lnkDwnldLnk')[0].click();
        document.body.removeChild(link);
    }
</script>

<script type="text/javascript">
    function selectFolder(e) {
        var theFiles = e.target.files;
        var relativePath = theFiles[0].webkitRelativePath;
        var folder = relativePath.split("/");
        alert(folder[0]);
    }
</script>

<div style="margin-bottom:20px">
    <h3>Variables - Equivalences</h3>
</div>

@using (Html.BeginForm("Variables", "Equivalence", new { studyName = Model.StudyName, fileName = Model.FileName }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    int itemCount = 0;
    int currentItem = 0;
    int currentCounter = 0;

    if (Model.SelectedStudies != null)
    {
        if (Model.SelectedStudies.Count != 0)
        {
            for (int i = 0; i < Model.SelectedStudies.Count(); i++)
            {
                @Html.TextBoxFor(modelItem => Model.SelectedStudies[i], new { style = "width:98%", @type = "hidden" })
            }

        }
    }
    if (Model.Datasets != null)
    {
        if (Model.Datasets.Count != 0)
        {
            for (int i = 0; i < Model.Datasets.Count(); i++)
            {
                @Html.TextBoxFor(modelItem => Model.Datasets[i].ID, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.Datasets[i].StudyName, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.Datasets[i].Value, new { style = "width:98%", @type = "hidden" })
            }

        }
    }
    if (Model.AllItems.Count() != 0)
    {
        for (int i = 0; i < Model.AllItems.Count(); i++)
        {
            @Html.TextBoxFor(modelItem => Model.AllItems[i].uniqueId, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].equivalence, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].name, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].description, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].variableName, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].variableText, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].variableItem, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].variableIdentifier, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].variableAgency, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].questionName, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].questionText, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].questionItem, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].questionIdentifier, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].studyGroup, new { style = "width:97%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].study, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].dataset, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].concept, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].column, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].selected, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].set, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].questionOrdered, new { style = "width:98%", @type = "hidden" })
            @Html.TextBoxFor(modelItem => Model.AllItems[i].variableOrdered, new { style = "width:98%", @type = "hidden" })

        }
    }
    <input type="hidden" style="width:100%" value="@ViewBag.selectedItems" name="selectedItems" id="selectedItems" />
    @Html.HiddenFor(x => x.EquivalenceSelection, new { style = "margin-top:10px; width:100%; font-size:small", @value = "@model.EquivalanceSelection" })
    @Html.HiddenFor(x => x.FileName)
    @Html.HiddenFor(x => x.Type)
    @Html.HiddenFor(x => x.StudyName)
    if (Model.AllResults.Count() != 0)
    {
    <div style="overflow:scroll; width:100%;height:80vh">
        <div style="border: 1px solid black; padding-top:10px; width:150%">
            <table border="0" style="margin-left:10px">
                <thead>
                    <tr>
                        <th align="left" style="width:40px">ID</th>
                        <th align="left" style="width:100px">Search Term</th>
                        <th align="left" style="width:150px">Name</th>
                        <th align="left" style="width:400px">Text</th>
                        <th align="left" style="width:150px">Variable Name</th>
                        <th align="left" style="width:400px">Variable Text</th>
                        <th align="left" style="width:350px">Variable Item</th>
                        <th align="left" style="width:150px">Question Name</th>
                        <th align="left" style="width:600px">Question Text</th>
                        <th align="left" style="width:350px">Question Item</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.AllResults.Count(); i++)
                    {
                        @Html.TextBoxFor(modelItem => Model.AllResults[i].studyGroup, new { style = "width:97%", @type = "hidden" })
                        @Html.TextBoxFor(modelItem => Model.AllResults[i].study, new { style = "width:98%", @type = "hidden" })
                        @Html.TextBoxFor(modelItem => Model.AllResults[i].dataset, new { style = "width:98%", @type = "hidden" })
                        @Html.TextBoxFor(modelItem => Model.AllResults[i].concept, new { style = "width:98%", @type = "hidden" })
                        @Html.TextBoxFor(modelItem => Model.AllResults[i].column, new { style = "width:98%", @type = "hidden" })
                        @Html.TextBoxFor(modelItem => Model.AllResults[i].selected, new { style = "width:98%", @type = "hidden" })

                        if (Model.AllResults[i].selected == true)
                        {

                            itemCount++;
                            currentCounter++;
                            if (itemCount == 1) { currentItem = Model.AllResults[i].uniqueId; }
                            if (Model.AllResults[i].uniqueId != currentItem)
                            {
                                currentItem = Model.AllResults[i].uniqueId;
                                currentCounter = 1;
                                @Html.Raw("</tbody></table></div><div style=\"border: 1px solid black; margin-top:5px; width:150%\"><table border=\"0\" style=\"margin-left:10px\">");
                                @Html.Raw("<thead><tr>")
                                @Html.Raw("<th align=\"left\" style=\"width:40px\">ID</th>")
                                @Html.Raw("<th align=\"left\" style=\"width:100px\">Search Term</th>")
                                @Html.Raw("<th align=\"left\" style=\"width:150px\">Name</th>")
                                @Html.Raw("<th align=\"left\" style=\"width:400px\">Text</th>")
                                @Html.Raw("<th align=\"left\" style=\"width:150px\">Variable Name</th>")
                                @Html.Raw("<th align=\"left\" style=\"width:400px\">Variable Text</th>")
                                @Html.Raw("<th align=\"left\" style=\"width:350px\">Variable Item</th>")
                                @Html.Raw("<th align=\"left\" style=\"width:150px\">Question Name</th>")
                                @Html.Raw("<th align=\"left\" style=\"width:600px\">Question Text</th>")
                                @Html.Raw("<th align=\"left\" style=\"width:350px\">Question Item</th>")

                                @Html.Raw("</tr></thead><tbody>")

                            }
                            <tr>
                                <td style="width:40px; margin-top:0">
                                    @if (currentCounter == 1)
                                    {
                                        @Html.DisplayFor(modelItem => Model.AllResults[i].uniqueId, new { style = "width:98%" })
                                    }
                                </td>
                                <td align="left" style="width:100px; margin-top:0">
                                    @if (currentCounter == 1)
                                    {
                                        @Html.DisplayFor(modelItem => Model.AllResults[i].equivalence, new { style = "width:98%" })
                                    }
                                </td>
                                <td style="width:150px; margin-top:0">
                                    @if (currentCounter == 1)
                                    {
                                        <input id=AllResults[@i].variablename name="AllResults[@i].name" style="width:98%" type="text" value="@Model.AllResults[i].name">
                                    }
                                </td>
                                <td style="width:400px; margin-top:0">
                                    @if (currentCounter == 1)
                                    {
                                        <input id=AllResults[@i].variabledescription name="AllResults[@i].description" style="width:98%" type="text" value="@Model.AllResults[i].description">
                                    }
                                </td>
                                <td align="left" style="width:150px; margin-top:0">
                                    @Html.DisplayFor(modelItem => Model.AllResults[i].variableName, new { style = "width:98%" })
                                </td>
                                <td align="left" style="width:400px; margin-top:0">
                                    @Html.DisplayFor(modelItem => Model.AllResults[i].variableText, new { style = "width:95%" })
                                </td>
                                <td align="left" style="width:350px; margin-top:0">
                                    @Html.DisplayFor(modelItem => Model.AllResults[i].variableItem, new { style = "width:98%" })
                                </td>
                                <td align="left" style="width:150px; margin-top:0">
                                    @Html.DisplayFor(modelItem => Model.AllResults[i].questionName, new { style = "width:98%" })
                                </td>
                                <td style="width:600px; margin-top:0">
                                    @Model.AllResults[i].questionText
                                    @*@Html.DisplayFor(modelItem => Model.AllResults[i].questionText, new { style = "width:95%" })*@
                                </td>
                                <td align="left" style="width:350px; margin-top:0">
                                    @Html.DisplayFor(modelItem => Model.AllResults[i].questionItem, new { style = "width:98%" })
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div style="width:100%">
        @{var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();}
        @{ serializer.MaxJsonLength = Int32.MaxValue;}
        <button type="button" onclick="outputCSVClicked('@serializer.Serialize(Model.AllResults)')" ; style="float:left; font-size:small; margin:10px">Output CSV</button>
        <input name="command" type="submit" value="Next" id="next" , style="float:right; font-size:small; margin:10px" />
        <input name="command" type="submit" value="Previous" id="previous" , style="float:right; font-size:small; margin:10px" />
    </div>

    }

    if (Model.AllResults != null)
    {
        if (Model.AllResults.Count != 0)
        {
            for (int i = 0; i < Model.AllResults.Count(); i++)
            {
                <input id=AllResults[@i].uniqueId name="AllResults[@i].uniqueId" style="width:98%" type="hidden" value="@Model.AllResults[i].uniqueId">
                <input id=AllResults[@i].equivalence name="AllResults[@i].equivalence" style="width:98%" type="hidden" value="@Model.AllResults[i].equivalence">
                <input id=AllResults[@i].questionname name="AllResults[@i].questionname" style="width:98%" type="hidden" value="@Model.AllResults[i].questionName">
                <input id=AllResults[@i].questiontext name="AllResults[@i].questiontext" style="width:98%" type="hidden" value="@Model.AllResults[i].questionText">
                <input id=AllResults[@i].questionitem name="AllResults[@i].questionitem" style="width:98%" type="hidden" value="@Model.AllResults[i].questionItem">
                <input id=AllResults[@i].questionidentier name="AllResults[@i].questionquestionidentifier" style="width:98%" type="hidden" value="@Model.AllResults[i].questionIdentifier">
                <input id=AllResults[@i].variablename name="AllResults[@i].variablename" style="width:98%" type="hidden" value="@Model.AllResults[i].variableName">
                <input id=AllResults[@i].variabletext name="AllResults[@i].variabletext" style="width:98%" type="hidden" value="@Model.AllResults[i].variableText">
                <input id=AllResults[@i].variableitem name="AllResults[@i].variableitem" style="width:98%" type="hidden" value="@Model.AllResults[i].variableItem">
                <input id=AllResults[@i].variableidentier name="AllResults[@i].variablevariableidentifier" style="width:98%" type="hidden" value="@Model.AllResults[i].variableIdentifier">

            }

        }
    }
}