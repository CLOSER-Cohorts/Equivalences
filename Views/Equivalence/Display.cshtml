@using ColecticaSdkMvc.Models;
@using System.Collections.Generic;
@using Newtonsoft.Json;
@model ColecticaSdkMvc.Models.EquivalenceModel
@{
    /**/

    ViewBag.Title = "Display";
    Layout = "~/Views/Shared/_Layout.cshtml";
    TempData.Keep("EquivalenceModel");
}

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

<style type="text/css">
    ul {
        list-style-type: none;
    }
</style>

<style>
    .tooltip {
        position: relative;
        display: inline-block;
        border-bottom: 1px dotted black;
    }

        .tooltip .tooltiptext {
            visibility: hidden;
            width: 120px;
            background-color: black;
            color: #fff;
            text-align: center;
            border-radius: 6px;
            padding: 5px 0;
            /* Position the tooltip */
            position: absolute;
            z-index: 1;
        }

        .tooltip:hover .tooltiptext {
            visibility: visible;
        }
</style>


<script>
    function myFunc(val) {
        alert(val);
    }
</script>



<script>
    function displayCSVClicked(csvdata) {
        var url = '@Url.Action("DisplayCSV", "Equivalence")';
        $.post(url, csvdata, function (view) {
            JSONtoCSVConvertor(view, "Display.csv", true);
        });
    }

    function JSONtoCSVConvertor(JSONData, ReportTitle, ShowLabel) {
        //If JSONData is not an object then JSON.parse will parse the JSON string in an Object
        var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;
        var CSV = '';

        //1st loop is to extract each row
        for (var i = 0; i < arrData.length; i++) {
            var row = "";
            //2nd loop will extract each column and convert it in string comma-seprated
            for (var index in arrData[i]) {
                row += arrData[i][index];
            }
            row.slice(0, row.length - 1);
            //add a line break after each row
            CSV += row;
        }
        if (CSV == '') {
            alert("Invalid data");
            return;
        }


        //this trick will generate a temp "a" tag
        var link = document.createElement("a");
        link.id = "lnkDwnldLnk";

        //this part will append the anchor tag and remove it after automatic click
        document.body.appendChild(link);

        var csv = CSV;
        blob = new Blob([csv], { type: 'text/csv' });
        var csvUrl = window.webkitURL.createObjectURL(blob);
        var filename = 'Display.csv';
        $("#lnkDwnldLnk")
            .attr({
                'download': filename,
                'href': csvUrl
            });

        $('#lnkDwnldLnk')[0].click();
        document.body.removeChild(link);

    }
</script>



<div id="divEmp">
    <div style="margin-bottom:10px">
        <h4>Display - Equivalences @Model.Elapsed</h4>
    </div>
    @using (Html.BeginForm("Display", "Equivalence", new { studyName = Model.StudyName, fileName = Model.FileName }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {


        @Html.AntiForgeryToken()

        int itemCount = 0;
        int currentItem = 0;
        int currentCounter = 0;

        <div style="border: 1px solid black; padding-top:10px; margin-bottom:10px; height:40px; width:100%">
            @Html.Label("Concepts :  ", new { style = "margin-left:20px" })
            @Html.DropDownListFor(model => model.selectedconcept, Model.concepts, "All Concepts", new { style = "width:98%, margin-left:20px", onchange = @"form.submit();" })
        </div>

        <input type="hidden" style="width:100%" value="@ViewBag.selectedItems" name="selectedItems" id="selectedItems" />
        <input type="hidden" style="width:100%" value="@ViewBag.selectedItems" name="originalItems" id="originalItems" />

        if (@Model.AllSelected != null)
        {
            for (int i = 0; i < Model.AllSelected.Count(); i++)
            {
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].uniqueId, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].equivalence, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].name, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].description, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].variableName, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].variableText, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].variableItem, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].variableIdentifier, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].variableAgency, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].questionName, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].questionText, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].questionItem, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].questionIdentifier, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].questionconceptitem, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].studyGroup, new { style = "width:97%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].study, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].dataset, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].concept, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].concepts, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].column, new { style = "width:98%", @type = "hidden" })
                @Html.TextBoxFor(modelItem => Model.AllSelected[i].selectconcept, new { style = "width:98%", @type = "hidden" })
            }
        }

        @Html.HiddenFor(x => x.EquivalenceSelection, new { style = "margin-top:10px; width:100%; font-size:small", @value = "@model.EquivalanceSelection" })
        @Html.HiddenFor(x => x.FileName)
        @Html.HiddenFor(x => x.Type)
        @Html.HiddenFor(x => x.StudyName)

        if (Model.AllSelected.Count() != 0)
        {
            <div style="overflow:scroll; width:100%;height:75vh">
                <div style="border: 1px solid black; padding-top:10px; width:130%">
                    <table border="0" style="margin-left:10px">
                        <thead>
                            <tr>
                                <th align="left" style="width:40px">ID</th>
                                <th align="left" style="width:120px">Search Term</th>
                                <th align="left" style="width:40px"></th>
                                <th align="left" style="width:150px">Question Name</th>
                                <th align="left" style="width:600px">Question Text</th>
                                <th align="left" style="width:150px">Variable Name</th>
                                <th align="left" style="width:300px">Variable Text</th>
                                <th align="left" style="width:100px">Agency</th>
                                <th align="left" style="width:16%">Study</th>
                                <th align="left" style="width:10%">Concept</th>
                                <th align="left" style="width:10%">Dataset</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.AllSelected.Count(); i++)
                            {
                                if (Model.AllSelected[i].selectconcept == true)
                                {
                                    itemCount++;
                                    currentCounter++;
                                    if (itemCount == 1) { currentItem = Model.AllSelected[i].uniqueId; }
                                    if (Model.AllSelected[i].uniqueId != currentItem)
                                    {
                                        currentItem = Model.AllSelected[i].uniqueId;
                                        currentCounter = 1;
                                        @Html.Raw("</tbody></table></div><div style=\"border: 1px solid black; margin-top:5px; width:130%\"><table border=\"0\" style=\"margin-left:10px\">");
                                        @Html.Raw("<thead><tr>")
                                        @Html.Raw("<th align=\"left\" style=\"width:40px\">ID</th>")
                                        @Html.Raw("<th align=\"left\" style=\"width:120px\">Search Term</th>")
                                        @Html.Raw("<th align=\"left\" style=\"width:40px\"></th>")
                                        @Html.Raw("<th align=\"left\" style=\"width:150px\">Question Name</th>")
                                        @Html.Raw("<th align=\"left\" style=\"width:600px\">Question Text</th>")
                                        @Html.Raw("<th align=\"left\" style=\"width:150px\">Variable Name</th>")
                                        @Html.Raw("<th align=\"left\" style=\"width:300px\">Variable Text</th>")
                                        @Html.Raw("<th align=\"left\" style=\"width:100px\">Agency</th>")
                                        @Html.Raw("<th align=\"left\" style=\"width:16%\">Study</th>")
                                        @Html.Raw("<th align=\"left\" style=\"width:10%\">Concept</th>")
                                        @Html.Raw("<th align=\"left\" style=\"width:10%\">Dataset</th>")
                                        @Html.Raw("</tr></thead><tbody>")

                                    }
                                    <tr>
                                        <td style="width:40px">
                                            @if (currentCounter == 1)
                                            {
                                                @Html.DisplayFor(modelItem => Model.AllSelected[i].uniqueId, new { style = "width:98%" })
                                            }
                                        </td>
                                        <td valign="top" align="left" style="width:120px; margin-top:0">
                                            @if (currentCounter == 1)
                                            {
                                                @Html.DisplayFor(modelItem => Model.AllSelected[i].equivalence, new { style = "width:98%" })
                                            }
                                        </td>
                                        <td valign="top" style="width:40px; margin-top:0">
                                            @Html.CheckBoxFor(modelItem => Model.AllSelected[i].selected, new { style = "width:98%", onclick = "myFunc(model.AllSelected[i].variableItem" })
                                        </td>
                                        <td align="left" style="width:150px">
                                            @Html.DisplayFor(modelItem => Model.AllSelected[i].questionName, new { style = "width:98%" })
                                        </td>
                                        <td valign="top" style="width:600px; margin-top:0">
                                            @Html.DisplayFor(modelItem => Model.AllSelected[i].questionText, new { style = "width:95%" })
                                        </td>
                                        <td align="left" style="width:150px">
                                            @Html.DisplayFor(modelItem => Model.AllSelected[i].variableName, new { style = "width:98%" })
                                        </td>
                                        <td align="left" style="width:300px; margin-top:0">
                                            @Html.DisplayFor(modelItem => Model.AllSelected[i].variableText, new { style = "width:95%" })
                                        </td>
                                        <td valign="top" align="left" style="width:100px; margin-top:0">
                                            @Html.DisplayFor(modelItem => Model.AllSelected[i].study, new { style = "width:95%" })
                                        </td>
                                        <td align="left" style="width:16%; margin-top:0">
                                            @Html.DisplayFor(modelItem => Model.AllSelected[i].studyGroup, new { style = "width:98%" })
                                        </td>
                                        <td valign="top" align="left" style="width:10%; margin-top:0">
                                            @Html.DisplayFor(modelItem => Model.AllSelected[i].concept, new { style = "width:98%" })
                                        </td>
                                        <td valign="top" align="left" style="width:10%; margin-top:0">
                                            @Html.DisplayFor(modelItem => Model.AllSelected[i].dataset, new { style = "width:98%" })
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        <div style="width:100%">
            @{var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();}
            @{ serializer.MaxJsonLength = Int32.MaxValue;}
            <button type="button" onclick="displayCSVClicked('@serializer.Serialize(Model.AllSelected)')" ; style="float:left; font-size:small; margin:10px">Output Equivalences</button>
            <input name="command" type="submit" value="Next" id="next" , style="float:right; font-size:small; margin:10px" />
            <input name="command" type="submit" value="Previous" id="previous" , style="float:right; font-size:small; margin:10px" />
        </div>
    }
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
