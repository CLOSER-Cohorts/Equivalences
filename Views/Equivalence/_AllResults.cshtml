@using ColecticaSdkMvc.Models;
@using System.Collections.Generic;
@model ColecticaSdkMvc.Models.EquivalenceModel
@{
    /**/

    ViewBag.Title = "Display";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int itemCount = 0;
    int currentItem = 0;
    int currentCounter = 0;
    int currentCounter2 = 0;
    string currentwave = null;
    string currentconcept = null;
}

<script>
    function myFunc(id, val) {
        alert(id);
        alert(val);
        document.getElementById(id).value = val;
    }
</script>

<div style="overflow:scroll; width:100%;height:80vh">
    <div style="border: 1px solid black; padding-top:10px; width:250%">
        <table border="0" style="margin-left:10px">
            <thead>
                <tr>
                    <th align="left" style="width:40px">ID</th>
                    <th align="left" style="width:120px">Search Term</th>
                    <th align="left" style="width:100px">Agency</th>
                    <th align="left" style="width:6%">Study</th>
                    <th align="left" style="width:300px">Concept</th>
                    <th align="left" style="width:300px">Selected Concept</th>
                    <th align="left" style="width:410px">Question Item</th>
                    <th align="left" style="width:410px">Question Concept</th>
                    <th align="left" style="width:150px">Question Name</th>
                    <th align="left" style="width:600px">Question Text</th>
                    <th align="left" style="width:410px">Variable Item</th>
                    <th align="left" style="width:410px">Variable Concept</th>
                    <th align="left" style="width:150px">Variable Name</th>
                    <th align="left" style="width:300px">Variable Text</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.AllResults.Count(); i++)
                {
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].uniqueId, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].equivalence, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].name, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].description, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].variableName, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].variableText, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].variableItem, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].variableIdentifier, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].variableAgency, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].questionName, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].questionText, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].questionItem, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].questionIdentifier, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].studyGroup, new { style = "width:97%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].study, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].dataset, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].concept, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].questionconceptitem, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].concepts, new { style = "width:98%", @type = "hidden" })
                    @*@Html.TextBoxFor(modelItem => Model.AllResults[i].conceptItems, new { style = "width:98%", @type = "hidden" })*@
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].column, new { style = "width:98%", @type = "hidden" })
                    @Html.TextBoxFor(modelItem => Model.AllResults[i].selected, new { style = "width:98%", @type = "hidden" })

                    for (int j = 0; j < Model.AllResults[i].conceptItems.Count(); j++)
                    {
                        @Html.TextBoxFor(modelItem => Model.AllResults[i].conceptItems[j].Text, new { style = "width:98%", @type = "hidden" })
                    }
                    if (Model.AllResults[i].concepts != 1)
                    {
                        itemCount++;
                        currentCounter++;
                        currentCounter2++;
                        if (itemCount == 1)
                        {
                            currentItem = Model.AllResults[i].uniqueId;
                            currentwave = Model.AllResults[i].studyGroup;
                            currentconcept = Model.AllResults[i].questionconceptitem;
                        }
                        if (Model.AllResults[i].studyGroup != currentwave)
                        {
                            currentwave = Model.AllResults[i].studyGroup;
                            currentCounter2 = 1;
                        }
                        if (Model.AllResults[i].questionItem != currentconcept)
                        {
                            currentconcept = Model.AllResults[i].questionItem;
                            currentCounter2 = 1;
                        }
                        if (Model.AllResults[i].uniqueId != currentItem)
                        {
                            currentItem = Model.AllResults[i].uniqueId;
                            currentCounter = 1;
                            @Html.Raw("</tbody></table></div><div style=\"border: 1px solid black; margin-top:5px; width:250%\"><table border=\"0\" style=\"margin-left:10px\">");
                            @Html.Raw("<thead><tr>")
                            @Html.Raw("<th align=\"left\" style=\"width:40px\">ID</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:120px\">Search Term</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:100px\">Agency</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:6%\">Study</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:300px\">Concept</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:300px\">Selected Concept</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:410px\">Question Item</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:410px\">Question Concept</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:150px\">Question Name</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:600px\">Question Text</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:410px\">Variable Item</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:410px\">Variable Concept</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:150px\">Variable Name</th>")
                            @Html.Raw("<th align=\"left\" style=\"width:300px\">Variable Text</th>")

                            @Html.Raw("</tr></thead><tbody>")
                        }
                        <tr>
                            <td valign="top" style="width:40px">
                                @if (currentCounter == 1)
                                {
                                    @Html.DisplayFor(modelItem => Model.AllResults[i].uniqueId, new { style = "width:98%" })
                                }
                            </td>
                            <td valign="top" align="left" style="width:120px; margin-top:0">
                                @if (currentCounter == 1)
                                {
                                    @Html.DisplayFor(modelItem => Model.AllResults[i].equivalence, new { style = "width:98%" })
                                }
                            </td>
                            <td valign="top" align="left" style="width:100px; margin-top:0">
                                @Html.DisplayFor(modelItem => Model.AllResults[i].study, new { style = "width:98%" })
                            </td>
                            <td valign="top" align="left" style="width:5%; margin-top:0">
                                @Html.DisplayFor(modelItem => Model.AllResults[i].studyGroup, new { style = "width:98%" })
                            </td>
                            <td valign="top" align="left" style="width:300px; margin-top:0">
                                @Html.DisplayFor(modelItem => Model.AllResults[i].concept, new { style = "width:98%" })
                            </td>
                            <td valign="top" align="left" style="width:300px; margin-top:0">
                                @if (currentCounter2 == 1)
                                {
                                    @Html.DropDownListFor(model => model.AllResults[i].selectedConcept, Model.AllResults[i].conceptItems, "", new { style = "width:98%", onchange = @"form.submit();" })
                                    @*@Html.DropDownListFor(model => model.AllResults[i].selectedConcept, Model.AllResults[i].conceptItems, "", new { style = "width:98%", onchange = "myFunc(this.id, this.value)" })*@
                                }
                            </td>
                            <td valign="top" align="left" style="width:410px">
                                @Html.DisplayFor(modelItem => Model.AllResults[i].questionItem, new { style = "width:98%" })
                            </td>
                            <td valign="top" align="left" style="width:410px">
                                @Html.DisplayFor(modelItem => Model.AllResults[i].questionconceptitem, new { style = "width:98%" })
                            </td>
                            <td valign="top" align="left" style="width:150px">
                                @Html.DisplayFor(modelItem => Model.AllResults[i].questionName, new { style = "width:98%" })
                            </td>
                            <td valign="top" align="left" style="width:600px">
                                @Html.DisplayFor(modelItem => Model.AllResults[i].questionText, new { style = "width:98%" })
                            </td>
                            <td valign="top" align="left" style="width:410px">
                                @Html.DisplayFor(modelItem => Model.AllResults[i].variableItem, new { style = "width:98%" })
                            </td>
                            <td valign="top" align="left" style="width:410px">
                                @Html.DisplayFor(modelItem => Model.AllResults[i].variableconceptitem, new { style = "width:98%" })
                            </td>
                            <td valign="top" align="left" style="width:150px">
                                @Html.DisplayFor(modelItem => Model.AllResults[i].variableName, new { style = "width:98%" })
                            </td>
                            <td valign="top" align="left" style="width:300px">
                                @Html.DisplayFor(modelItem => Model.AllResults[i].variableText, new { style = "width:98%" })
                            </td>
                        </tr>

                    }
                }
            </tbody>
        </table>
    </div>
</div>
<div style="width:100%">
    @{var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();}
    @{ serializer.MaxJsonLength = Int32.MaxValue;}
    <button type="button" onclick="outputCSVClicked('@serializer.Serialize(Model.AllResults)')" ; style="float:left; font-size:small; margin:10px">Output CSV</button>
    <input name="command" type="submit" value="Next" id="next" , style="float:right; font-size:small; margin:10px" />
    <input name="command" type="submit" value="Previous" id="previous" , style="float:right; font-size:small; margin:10px" />

</div>

